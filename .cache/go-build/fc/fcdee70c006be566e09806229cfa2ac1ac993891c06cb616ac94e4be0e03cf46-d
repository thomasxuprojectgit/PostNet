
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"


	_test "command-line-arguments"



)

var tests = []testing.InternalTest{

	{"TestHost", _test.TestHost},

	{"TestPath", _test.TestPath},

	{"TestPathPrefix", _test.TestPathPrefix},

	{"TestSchemeHostPath", _test.TestSchemeHostPath},

	{"TestHeaders", _test.TestHeaders},

	{"TestMethods", _test.TestMethods},

	{"TestQueries", _test.TestQueries},

	{"TestSchemes", _test.TestSchemes},

	{"TestMatcherFunc", _test.TestMatcherFunc},

	{"TestBuildVarsFunc", _test.TestBuildVarsFunc},

	{"TestSubRouter", _test.TestSubRouter},

	{"TestNamedRoutes", _test.TestNamedRoutes},

	{"TestNameMultipleCalls", _test.TestNameMultipleCalls},

	{"TestStrictSlash", _test.TestStrictSlash},

	{"TestUseEncodedPath", _test.TestUseEncodedPath},

	{"TestWalkSingleDepth", _test.TestWalkSingleDepth},

	{"TestWalkNested", _test.TestWalkNested},

	{"TestWalkSubrouters", _test.TestWalkSubrouters},

	{"TestWalkErrorRoute", _test.TestWalkErrorRoute},

	{"TestWalkErrorMatcher", _test.TestWalkErrorMatcher},

	{"TestWalkErrorHandler", _test.TestWalkErrorHandler},

	{"TestSubrouterErrorHandling", _test.TestSubrouterErrorHandling},

	{"TestPanicOnCapturingGroups", _test.TestPanicOnCapturingGroups},

	{"Test301Redirect", _test.Test301Redirect},

	{"TestSkipClean", _test.TestSkipClean},

	{"TestSubrouterHeader", _test.TestSubrouterHeader},

	{"TestNoMatchMethodErrorHandler", _test.TestNoMatchMethodErrorHandler},

	{"TestErrMatchNotFound", _test.TestErrMatchNotFound},

	{"TestMethodsSubrouterCatchall", _test.TestMethodsSubrouterCatchall},

	{"TestMethodsSubrouterStrictSlash", _test.TestMethodsSubrouterStrictSlash},

	{"TestMethodsSubrouterPathPrefix", _test.TestMethodsSubrouterPathPrefix},

	{"TestMethodsSubrouterSubrouter", _test.TestMethodsSubrouterSubrouter},

	{"TestMethodsSubrouterPathVariable", _test.TestMethodsSubrouterPathVariable},

	{"TestSubrouterMatching", _test.TestSubrouterMatching},

	{"Test_copyRouteConf", _test.Test_copyRouteConf},

	{"TestMethodNotAllowed", _test.TestMethodNotAllowed},

	{"TestSubrouterCustomMethodNotAllowed", _test.TestSubrouterCustomMethodNotAllowed},

	{"TestSubrouterNotFound", _test.TestSubrouterNotFound},

	{"TestContextMiddleware", _test.TestContextMiddleware},

}

var benchmarks = []testing.InternalBenchmark{

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleSetURLVars", _test.ExampleSetURLVars, "bar\n", false},

}

func init() {
	testdeps.ImportPath = ""
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

