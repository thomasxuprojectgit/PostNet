
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"


	_test "github.com/form3tech-oss/jwt-go"


	_xtest "github.com/form3tech-oss/jwt-go_test"


)

var tests = []testing.InternalTest{

	{"Test_mapClaims_list_aud", _test.Test_mapClaims_list_aud},

	{"Test_mapClaims_list_interface_aud", _test.Test_mapClaims_list_interface_aud},

	{"Test_mapClaims_string_aud", _test.Test_mapClaims_string_aud},

	{"Test_mapClaims_list_aud_no_match", _test.Test_mapClaims_list_aud_no_match},

	{"Test_mapClaims_string_aud_fail", _test.Test_mapClaims_string_aud_fail},

	{"Test_mapclaims_verify_issued_at_invalid_type_string", _test.Test_mapclaims_verify_issued_at_invalid_type_string},

	{"Test_mapclaims_verify_not_before_invalid_type_string", _test.Test_mapclaims_verify_not_before_invalid_type_string},

	{"Test_mapclaims_verify_expires_at_invalid_type_string", _test.Test_mapclaims_verify_expires_at_invalid_type_string},

	{"Test_mapClaims_string_aud_no_claim", _test.Test_mapClaims_string_aud_no_claim},

	{"Test_mapClaims_string_aud_no_claim_not_required", _test.Test_mapClaims_string_aud_no_claim_not_required},

	{"TestECDSAVerify", _xtest.TestECDSAVerify},

	{"TestECDSASign", _xtest.TestECDSASign},

	{"TestHMACVerify", _xtest.TestHMACVerify},

	{"TestHMACSign", _xtest.TestHMACSign},

	{"TestNoneVerify", _xtest.TestNoneVerify},

	{"TestNoneSign", _xtest.TestNoneSign},

	{"TestParser_Parse", _xtest.TestParser_Parse},

	{"TestParser_ParseUnverified", _xtest.TestParser_ParseUnverified},

	{"TestRSAPSSVerify", _xtest.TestRSAPSSVerify},

	{"TestRSAPSSSign", _xtest.TestRSAPSSSign},

	{"TestRSAPSSSaltLengthCompatibility", _xtest.TestRSAPSSSaltLengthCompatibility},

	{"TestRSAVerify", _xtest.TestRSAVerify},

	{"TestRSASign", _xtest.TestRSASign},

	{"TestRSAVerifyWithPreParsedPrivateKey", _xtest.TestRSAVerifyWithPreParsedPrivateKey},

	{"TestRSAWithPreParsedPrivateKey", _xtest.TestRSAWithPreParsedPrivateKey},

	{"TestRSAKeyParsing", _xtest.TestRSAKeyParsing},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkHS256Signing", _xtest.BenchmarkHS256Signing},

	{"BenchmarkHS384Signing", _xtest.BenchmarkHS384Signing},

	{"BenchmarkHS512Signing", _xtest.BenchmarkHS512Signing},

	{"BenchmarkRS256Signing", _xtest.BenchmarkRS256Signing},

	{"BenchmarkRS384Signing", _xtest.BenchmarkRS384Signing},

	{"BenchmarkRS512Signing", _xtest.BenchmarkRS512Signing},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleNew_hmac", _xtest.ExampleNew_hmac, "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJuYmYiOjE0NDQ0Nzg0MDB9.u1riaD1rW97opCoAuRCTy4w58Br-Zk-bh7vLiRIsrpU <nil>\n", false},

	{"ExampleParse_hmac", _xtest.ExampleParse_hmac, "bar 1.4444784e+09\n", false},

	{"Example_getTokenViaHTTP", _xtest.Example_getTokenViaHTTP, "test\n", false},

	{"Example_useTokenViaHTTP", _xtest.Example_useTokenViaHTTP, "Welcome, foo\n", false},

}

func init() {
	testdeps.ImportPath = "github.com/form3tech-oss/jwt-go"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

