
// Code generated by 'go test'. DO NOT EDIT.

package main

import (
	"os"

	"testing"
	"testing/internal/testdeps"


	_test "github.com/pkg/errors"


	_xtest "github.com/pkg/errors_test"


)

var tests = []testing.InternalTest{

	{"TestNew", _test.TestNew},

	{"TestWrapNil", _test.TestWrapNil},

	{"TestWrap", _test.TestWrap},

	{"TestCause", _test.TestCause},

	{"TestWrapfNil", _test.TestWrapfNil},

	{"TestWrapf", _test.TestWrapf},

	{"TestErrorf", _test.TestErrorf},

	{"TestWithStackNil", _test.TestWithStackNil},

	{"TestWithStack", _test.TestWithStack},

	{"TestWithMessageNil", _test.TestWithMessageNil},

	{"TestWithMessage", _test.TestWithMessage},

	{"TestWithMessagefNil", _test.TestWithMessagefNil},

	{"TestWithMessagef", _test.TestWithMessagef},

	{"TestErrorEquality", _test.TestErrorEquality},

	{"TestFormatNew", _test.TestFormatNew},

	{"TestFormatErrorf", _test.TestFormatErrorf},

	{"TestFormatWrap", _test.TestFormatWrap},

	{"TestFormatWrapf", _test.TestFormatWrapf},

	{"TestFormatWithStack", _test.TestFormatWithStack},

	{"TestFormatWithMessage", _test.TestFormatWithMessage},

	{"TestFormatGeneric", _test.TestFormatGeneric},

	{"TestFormatWrappedNew", _test.TestFormatWrappedNew},

	{"TestErrorChainCompat", _test.TestErrorChainCompat},

	{"TestIs", _test.TestIs},

	{"TestAs", _test.TestAs},

	{"TestUnwrap", _test.TestUnwrap},

	{"TestFrameMarshalText", _test.TestFrameMarshalText},

	{"TestFrameMarshalJSON", _test.TestFrameMarshalJSON},

	{"TestFrameFormat", _test.TestFrameFormat},

	{"TestFuncname", _test.TestFuncname},

	{"TestStackTrace", _test.TestStackTrace},

	{"TestStackTraceFormat", _test.TestStackTraceFormat},

}

var benchmarks = []testing.InternalBenchmark{

	{"BenchmarkErrors", _test.BenchmarkErrors},

	{"BenchmarkStackFormatting", _test.BenchmarkStackFormatting},

}

var fuzzTargets = []testing.InternalFuzzTarget{

}

var examples = []testing.InternalExample{

	{"ExampleNew", _xtest.ExampleNew, "whoops\n", false},

	{"ExampleWithMessage", _xtest.ExampleWithMessage, "oh noes: whoops\n", false},

	{"ExampleWithStack", _xtest.ExampleWithStack, "whoops\n", false},

	{"ExampleWrap", _xtest.ExampleWrap, "oh noes: whoops\n", false},

	{"ExampleCause", _xtest.ExampleCause, "outer: middle: inner: error\nerror\n", false},

	{"ExampleWrapf", _xtest.ExampleWrapf, "oh noes #2: whoops\n", false},

	{"ExampleCause_printf", _xtest.ExampleCause_printf, "failed: hello world\n", false},

}

func init() {
	testdeps.ImportPath = "github.com/pkg/errors"
}



func main() {

	m := testing.MainStart(testdeps.TestDeps{}, tests, benchmarks, fuzzTargets, examples)

	os.Exit(m.Run())

}

